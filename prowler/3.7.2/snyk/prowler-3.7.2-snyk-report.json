{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/HardcodedNonCryptoSecret/test",
              "name": "HardcodedNonCryptoSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "HardcodedNonCryptoSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ortoloco/ortoloco/commit/2bdc2a18ae07478b6b2ad481e6ad8ee43d99dd11?diff=split#diff-2c4d0fc3f973ca45b5be1e050f542f3fdf9f879073895c1ff6c8a127f9311b67L-1",
                    "lines": [
                      {
                        "line": "import os\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "    General Settings\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "DEBUG = os.environ.get(\"JUNTAGRICO_DEBUG\", \"True\") == \"True\"\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "ALLOWED_HOSTS = ['my.ortoloco.ch']\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "DATA_UPLOAD_MAX_NUMBER_FIELDS = None\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "FILE_UPLOAD_PERMISSIONS = 0o444\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "ROOT_URLCONF = 'ortoloco.urls'\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "SITE_ID = 1\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "LOGIN_REDIRECT_URL = \"/my/home\"\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Python dotted path to the WSGI application used by Django's runserver.\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "WSGI_APPLICATION = 'ortoloco.wsgi.application'\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Make this unique, and don't share it with anybody.\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SECRET_KEY = 'd3w=vyfqpqmcj#&ge1d0$ch#ff7$qt#6z)lzqt=9pg8wg%d^%s'\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SECRET_KEY = os.environ.get('JUNTAGRICO_SECRET_KEY')\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kirstykitto/CLAtoolkit/commit/57b0252012fd2bee6671734f8a598c47106dcb3c?diff=split#diff-fb10e8b863c0b9b7a10271f5cda36dbf1e7e3fe75586870b7547050c7e2e77fdL-1",
                    "lines": [
                      {
                        "line": "import os\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "from apiclient.discovery import build\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "CLIENT_ID = '775313004373-6nt8n91ih4g5qku95us9ceskbdlb6ure.apps.googleusercontent.com'\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "CLIENT_SECRET = 'MJHbk5HdDWmqyptU_ZZtBQNP'\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "SCOPE_YOUTUBE = 'https://www.googleapis.com/auth/youtube https://www.googleapis.com/auth/youtube.force-ssl https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/youtubepartner'\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "REDIRECT_URI = 'http://127.0.0.1:8000/dataintegration/ytAuthCallback'\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "STR_YT_VIDEO_BASE_URL = \"https://www.youtube.com/watch?v=\"\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "STR_YT_CHANNEL_BASE_URL = \"https://www.youtube.com/channel/\"\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "STR_PLATFORM_NAME_YOUTUBE = \"YouTube\"\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "STR_PLATFORM_URL_YOUTUBE = \"https://www.youtube.com\"\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "STR_OBJ_TYPE_VIDEO = 'Video'\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "# For YouTube OAuth authentication\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "FLOW_YOUTUBE = OAuth2WebServerFlow(\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    client_id=CLIENT_ID,\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    client_secret=CLIENT_SECRET,\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    client_id=os.environ.get(\"YOUTUBE_CLIENT_ID\"),\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "    client_secret=os.environ.get(\"YOUTUBE_CLIENT_SECRET\"),\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hartwork/jawanndenn/commit/18eebc346ded81b839b1b2d38caf19927255afca?diff=split#diff-dd637aba286a0661c1b974283e708ce762bb3d24a707054e5b81495c1b7ab2b6L-1",
                    "lines": [
                      {
                        "line": "import os\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "from jawanndenn import DEFAULT_MAX_POLLS, DEFAULT_MAX_VOTES_PER_POLL\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Quick-start development settings - unsuitable for production\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "# SECURITY WARNING: keep the secret key used in production secret!\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "SECRET_KEY = 'ou@c@e2(9oh4*z9+tu0!)zf)j=_($#vmu36iflgy@g19+bkp-m'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SECRET_KEY = os.environ['JAWANNDENN_SECRET_KEY']\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 109,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/malept/gmusicprocurator/commit/0df7be3ef3ca89b42331939d88ca9919944295c9?diff=split#diff-9e23a9ffa43e64422973783e9021248781e0732c50d02ec8b7b1ac680b56c173L-1",
                    "lines": [
                      {
                        "line": "from flask import abort, request, Response, send_file, url_for\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from flask import abort, request, Response, safe_join, send_file, url_for\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "from flask.json import jsonify\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import os\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "import requests\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "from shutil import copyfileobj\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "from tempfile import NamedTemporaryFile\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "from xspf import Xspf\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "from ..app import app, music\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "from ..id3 import MP3\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "JSON_TYPE = 'application/json'\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "XSPF_TYPE = 'application/xspf+xml'\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "# Mapping: Google : Mutagen EasyID3\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "METADATA_FIELDS = {\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'artist': 'artist',\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'title': 'title',\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'album': 'album',\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'albumArtist': 'albumartistsort',\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'composer': 'composer',\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'trackNumber': 'tracknumber',\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'discNumber': 'discnumber',\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'genre': 'genre',\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'year': 'date',\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'durationMillis': 'length',\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "if app.config['GMP_EMBED_ALBUM_ART']:\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    METADATA_FIELDS['albumArtRef'] = 'albumart'\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "def mp3ify(resp):\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Sets MIME Type and Content-Disposition header suitable for MP3s.'''\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    resp.mimetype = 'audio/mpeg'\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    resp.headers.add('Content-Disposition', 'inline', filename='song.mp3')\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return resp\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "def send_song(filename):\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Generates a Flask response for an MP3 on the filesystem.'''\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return mp3ify(send_file(filename))\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "def gmusic_playlist_to_xspf(playlist_id, playlist):\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    Converts a playlist from gmusicapi into an XSPF playlist.\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :type playlist: dict\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return: XSPF (XML), UTF-8 encoded\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :rtype: str\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    create_ts = int(playlist['creationTimestamp']) / 1000000.0\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "    create_iso = datetime.utcfromtimestamp(create_ts).isoformat()\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    p_url = url_for('get_playlist', _external=True, playlist_id=playlist_id)\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    xspf = Xspf(title=playlist['name'], creator=playlist['ownerName'],\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "                date=create_iso, location=p_url)\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for track in playlist['tracks']:\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if 'track' not in track:\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "            continue\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        tmd = track['track']\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "        url = url_for('get_song', _external=True, song_id=tmd['storeId'])\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        metadata = {\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'location': url,\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'title': tmd['title'],\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'creator': tmd['artist'],\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'album': tmd['album'],\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'trackNum': str(tmd['trackNumber']),\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'duration': tmd['durationMillis'],\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        album_art = tmd.get('albumArtRef', [])\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if album_art:\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "            metadata['image'] = album_art[0]['url']\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "        xspf.add_track(metadata)\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return xspf.toXml()\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/songs/<song_id>')\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_song(song_id):\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Retrieves the MP3 for a given ID.'''\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cached_fname = os.path.join(app.config['GMP_CACHE_DIR'], song_id)\n",
                        "lineNumber": 98,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    cached_fname = safe_join(app.config['GMP_CACHE_DIR'], song_id)\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-1a4392d737f3fd2c0cb7b5c2cb9369b2af835a8f163873ad152e0c2856664af1L-1",
                    "lines": [
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "from app import web, CobraTaskInfo, db\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/', methods=['GET'])\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/index', methods=['GET'])\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "def homepage():\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In homepage Route')\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return render_template('index.html')\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/blank')\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "def blank():\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In blank Route')\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return render_template('blank.html')\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/add', methods=['POST'])\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add():\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In add Route')\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # url, username, password, scan_type, level, scan_way, old_version, new_version\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # if user upload a file, so we set the scan type to file scan\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # if there is no upload file, we set the scan type to gitlab scan\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check scan type and level\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    scan_type = request.form['scan_type']\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    level = request.form['level']\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not scan_type or not level or not scan_type.isdigit() or not level.isdigit():\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'please select Scan vulnerabilities and Level')\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if scan_type not in [str(x) for x in range(1, 4)]:\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'scan type error.')\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check scan way and version\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    scan_way = request.form['scan_way']\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    old_version = request.form['old_version']\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new_version = request.form['new_version']\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not scan_way or not scan_way.isdigit():\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'please select scan method.')\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if scan_way == '2':\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not old_version or not new_version:\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return jsonify(code=1002, msg=u'in diff mode, please provide new version and old version.')\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    elif scan_way == '1':\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "        old_version = None\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_version = None\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'scan method error.')\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check if there is a file or gitlab url\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if len(request.files) == 0:\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # no files, should check username and password\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        task_type = 1\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        url = request.form['url']\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        username = request.form['username']\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        password = request.form['password']\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not url or not username or not password:\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return jsonify(code=1002, msg=u'please support username, password and gitlab.')\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # insert into db\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_task = CobraTaskInfo(task_type, int(time.time()), None, url, username, password, scan_type, level,\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "                                 scan_way, old_version, new_version)\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.session.add(new_task)\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.session.commit()\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # there is a file, check file format and uncompress it.\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        task_type = 2\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        upload_src = request.files['file']\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = str(int(time.time())) + '_' + upload_src.filename\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)\n",
                        "lineNumber": 90,
                        "lineChange": "added"
                      },
                      {
                        "line": "        filepath = 'uploads/' + filename\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "        upload_src.save(filepath)\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/WhaleShark-Team/cobra/commit/1ac467a2c1cf8427a5bf60031677817140fe181c?diff=split#diff-1a4392d737f3fd2c0cb7b5c2cb9369b2af835a8f163873ad152e0c2856664af1L-1",
                    "lines": [
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "from app import web, CobraTaskInfo, db\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/', methods=['GET'])\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/index', methods=['GET'])\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "def homepage():\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In homepage Route')\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return render_template('index.html')\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/blank')\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "def blank():\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In blank Route')\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return render_template('blank.html')\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "@web.route('/add', methods=['POST'])\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "def add():\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.debug('In add Route')\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # url, username, password, scan_type, level, scan_way, old_version, new_version\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # if user upload a file, so we set the scan type to file scan\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # if there is no upload file, we set the scan type to gitlab scan\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check scan type and level\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    scan_type = request.form['scan_type']\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    level = request.form['level']\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not scan_type or not level or not scan_type.isdigit() or not level.isdigit():\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'please select Scan vulnerabilities and Level')\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if scan_type not in [str(x) for x in range(1, 4)]:\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'scan type error.')\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check scan way and version\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    scan_way = request.form['scan_way']\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    old_version = request.form['old_version']\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new_version = request.form['new_version']\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not scan_way or not scan_way.isdigit():\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'please select scan method.')\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if scan_way == '2':\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not old_version or not new_version:\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return jsonify(code=1002, msg=u'in diff mode, please provide new version and old version.')\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "    elif scan_way == '1':\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "        old_version = None\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_version = None\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return jsonify(code=1002, msg=u'scan method error.')\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    task_type = 1\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # check if there is a file or gitlab url\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if len(request.files) == 0:\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # no files, should check username and password\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        task_type = 1\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        url = request.form['url']\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        username = request.form['username']\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        password = request.form['password']\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not url or not username or not password:\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return jsonify(code=1002, msg=u'please support username, password and gitlab.')\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # insert into db\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "        new_task = CobraTaskInfo(task_type, int(time.time()), None, url, username, password, scan_type, level,\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "                                 scan_way, old_version, new_version)\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.session.add(new_task)\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        db.session.commit()\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else:\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # there is a file, check file format and uncompress it.\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        task_type = 2\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        upload_src = request.files['file']\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = str(int(time.time())) + '_' + upload_src.filename\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        filename = str(int(time.time())) + '_' + secure_filename(upload_src.filename)\n",
                        "lineNumber": 90,
                        "lineChange": "added"
                      },
                      {
                        "line": "        filepath = 'uploads/' + filename\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "        upload_src.save(filepath)\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # if you upload a rar file, upload_src.mimetype will returns \"application/octet-stream\"\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # rather than \"application/x-rar\"\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # check file type via mime type\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "        file_type = magic.from_file(filepath, mime=True)\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if file_type != 'application/x-rar' and file_type != 'application/x-gzip' and file_type != 'application/zip':\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "            os.remove(filepath)\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 7,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Xcal1bur/Giter/commit/cd3cb5a9a8a2b20d38d76350dce71d5ce4c1ae52?diff=split#diff-5525cbff62ceafe31dc99d746001579986f2348868bf4da54771d6a54259e3f7L-1",
                    "lines": [
                      {
                        "line": "    subprocess.run(f\"git remote add origin git@github.com:{username}/{repo_name}.git\", shell=True)\n",
                        "lineNumber": 99,
                        "lineChange": "removed"
                      },
                      {
                        "line": "subprocess.run(\"git pull origin master:master\", shell=True)\n",
                        "lineNumber": 100,
                        "lineChange": "removed"
                      },
                      {
                        "line": "subprocess.run(\"git rebase origin/master\", shell=True)\n",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "subprocess.run(\"git push -u origin master\", shell=True)\n",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    subprocess.run([\"git\", \"remote\", \"add\", \"origin\", f\"git@github.com:{username}/{repo_name}.git\"])\n",
                        "lineNumber": 112,
                        "lineChange": "added"
                      },
                      {
                        "line": "subprocess.run([\"git\", \"pull\", \"origin\", \"master:master\"])\n",
                        "lineNumber": 113,
                        "lineChange": "added"
                      },
                      {
                        "line": "subprocess.run([\"git\", \"rebase\", \"origin/master\"])\n",
                        "lineNumber": 114,
                        "lineChange": "added"
                      },
                      {
                        "line": "subprocess.run([\"git\", \"push\", \"-u\", \"origin\", \"master\"])\n",
                        "lineNumber": 115,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/lammps/lammps/commit/22f99be57e6e97754bb9f1ee264b7dd844916fda?diff=split#diff-4e7cc7a44b4b4f346493d07636004e210db6bc3f4ec9e0652aa5c7408360f27aL-1",
                    "lines": [
                      {
                        "line": "import sys,os,re,subprocess\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import sys,os,re,subprocess,shutil\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "# help message\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "help = \"\"\"\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "Syntax from src dir: make lib-scafacos args=\"-b\"\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "                 or: make lib-scafacos args=\"-p /usr/local/scafacos\"\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "Syntax from lib dir: python Install.py -b\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "                 or: python Install.py -p /usr/local/scafacos\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "specify zero or more options, order does not matter\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  -b = download and build the Scafacos library\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  -p = specify folder of existing Scafacos installation\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "   always creates includelink, liblink to Scafacos dirs\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "Example:\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "make lib-scafacos args=\"-b\"   # download/build in lib/scafacos/scafacos\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "make lib-scafacos args=\"-p $HOME/scafacos\" # use existing Scafacos installation in $HOME\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "# settings\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "version = \"scafacos-1.0.1\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "url = \"https://github.com/scafacos/scafacos/releases/download/v1.0.1/scafacos-1.0.1.tar.gz\"\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "#url = \"https://gigamove.rz.rwth-aachen.de/d/id/CTzyApN76MXMJ6/dd/100\" % version\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "# print error message or help\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "def error(str=None):\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if not str: print(help)\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else: print(\"ERROR\",str)\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  sys.exit()\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "# expand to full path name\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "# process leading '~' or relative path\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "def fullpath(path):\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return os.path.abspath(os.path.expanduser(path))\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "def which(program):\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "  def is_exe(fpath):\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "  fpath, fname = os.path.split(program)\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if fpath:\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if is_exe(program):\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "      return program\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else:\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for path in os.environ[\"PATH\"].split(os.pathsep):\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "      path = path.strip('\"')\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "      exe_file = os.path.join(path, program)\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if is_exe(exe_file):\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return exe_file\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return None\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "def geturl(url,fname):\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "  success = False\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if which('curl') != None:\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cmd = 'curl -L -o \"%s\" %s' % (fname,url)\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "      subprocess.check_output(cmd,stderr=subprocess.STDOUT,shell=True)\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "      success = True\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    except subprocess.CalledProcessError as e:\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "      print(\"Calling curl failed with: %s\" % e.output.decode('UTF-8'))\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if not success and which('wget') != None:\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cmd = 'wget -O \"%s\" %s' % (fname,url)\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print(\"Wget command: %s\" % cmd)\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try:\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "      subprocess.check_output(cmd,stderr=subprocess.STDOUT,shell=True)\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "      success = True\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    except subprocess.CalledProcessError as e:\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "      print(\"Calling wget failed with: %s\" % e.output.decode('UTF-8'))\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if not success:\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "    error(\"Failed to download source code with 'curl' or 'wget'\")\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "# parse args\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "args = sys.argv[1:]\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "nargs = len(args)\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "homepath = \".\"\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "buildflag = True \n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "pathflag = False\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "linkflag = True\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "iarg = 0\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "while iarg < nargs:\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if args[iarg] == \"-v\":\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if iarg+2 > nargs: error()\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    version = args[iarg+1]\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    iarg += 2\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "  elif args[iarg] == \"-p\":\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if iarg+2 > nargs: error()\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    scafacospath = fullpath(args[iarg+1])\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pathflag = True\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    iarg += 2\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  elif args[iarg] == \"-b\":\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    buildflag = True\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    iarg += 1\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "  else: error()\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "homepath = fullpath(homepath)\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "homedir = \"%s/%s\" % (homepath,version)\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (pathflag):\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not os.path.isdir(scafacospath): error(\"Scafacos path does not exist\")\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "    homedir =scafacospath\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (buildflag and pathflag):\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "    error(\"Cannot use -b and -p flag at the same time\")\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "# download and unpack Scafacos tarball\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "if buildflag:\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "  print(\"Downloading Scafacos ...\")\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  geturl(url,\"%s/%s.tar.gz\" % (homepath,version))\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "  print(\"Unpacking Scafacos tarball ...\")\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if os.path.exists(\"%s/%s\" % (homepath,version)):\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cmd = 'rm -rf \"%s/%s\"' % (homepath,version)\n",
                        "lineNumber": 134,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    subprocess.check_output(cmd,stderr=subprocess.STDOUT,shell=True)\n",
                        "lineNumber": 135,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    shutil.rmtree(\"%s/%s\" % (homepath,version))\n",
                        "lineNumber": 134,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jachinlin/kindle_maker/commit/8804b85a69865837d31e37bdf73e01844229c5bc?diff=split#diff-00e2b2a85960fbf3f1969c885888cbc0aefd4e01c24e7fc34e1fecc94429f7b3L-1",
                    "lines": [
                      {
                        "line": "import shutil\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "from jinja2 import Environment, FileSystemLoader\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "templates_env = Environment(loader=FileSystemLoader('%s/templates/' % os.path.dirname(os.path.realpath(__file__))))\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "_default_output_dir = '/tmp/kindle_maker/'\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_file(template_name, context, output_name, output_dir):\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    template = templates_env.get_template(template_name)\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with open(os.path.join(output_dir, output_name), \"w\") as f:\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f.write(template.render(**context))\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_toc_ncx(headers, output_dir, title=None, author=None):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param headers:\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param output_dir:\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param title:\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param author:\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return:\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "    render_file(\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'toc.xml',\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "        {\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'headers': headers,\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'title': title or 'jachinlin.github.io' + str(datetime.date.today()),\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "            'author': author or 'jachinlin.github.io'\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        },\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'toc.ncx',\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        output_dir\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    )\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_toc_html(headers, output_dir):\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param headers:\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param output_dir:\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return:\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    render_file('toc.html', {'headers': headers}, 'toc.html', output_dir)\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_opf(headers, title, output_dir, author=None):\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param headers:\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param title:\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param output_dir:\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param author:\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return:\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    render_file('opf.xml', {'headers': headers, 'title': title,\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "                            'author': author or 'jachinlin.github.io'}, '{}.opf'.format(title), output_dir)\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "def parse_headers(toc_file_name):\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param toc_file_name:\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return:\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    headers_info = []\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "    with open(toc_file_name) as f:\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "        headers = f.readlines()\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        order = 1\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not headers:\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return None, None\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        title_line = 0\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "        while (not headers[title_line].strip()) or title_line == len(headers):\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "            title_line += 1\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if title_line == len(headers):\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return None, None\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "        title = headers[title_line].strip()\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for h in headers[title_line + 1:]:\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if h.startswith('# '):\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "                order += 1\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "                headers_info.append({\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    'title': h[2:].strip(),\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    'play_order': order,\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    'next_headers': []\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "                })\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if h.startswith('## '):\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if len(headers) == 0:\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    continue\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "                order += 1\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "                headers_info[-1]['next_headers'].append({\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    'title': h[2:].strip(),\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    'play_order': order,\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "                })\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return title, headers_info\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "def make_ebook(source_dir, output_dir=None):\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    make ebook with the files in source_dir and put the ebook made in output_dir\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param source_dir:\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :param output_dir:\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    :return:\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"\"\"\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    output_dir = output_dir or _default_output_dir\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # make a tmp dir in output_dir\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tmp_dir = os.path.join(output_dir, str(uuid.uuid4()))\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system(\"mkdir -p {}\".format(tmp_dir))\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # copy source files to tmp dir\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "    os.system(\"cp -rf {}/* {}\".format(source_dir, tmp_dir))\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # parse toc.md file\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "    toc_file_name = os.path.join(tmp_dir, 'toc.md')\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not os.path.exists(toc_file_name):\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise ValueError('not exists toc md file')\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title, headers = parse_headers(toc_file_name)\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not title:\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "        raise ValueError('invalid toc md file')\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # cover\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cover_file_name = os.path.join(tmp_dir, 'cover.jpg')\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not os.path.exists(cover_file_name):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cover = '%s/templates/cover.jpg' % os.path.dirname(os.path.realpath(__file__))\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "        os.system('cp %s %s' % (cover, tmp_dir))\n",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        shutil.copy(cover, tmp_dir)\n",
                        "lineNumber": 133,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 134,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 47,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "python/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "NoHardcodedCredentials",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/yevhenradchenko/bamboohr-parser/commit/2d5ebed54b630c461ecde9db1ca8a880e1080d4f?diff=split#diff-51d19aaaff78dcc4e5e0629e5998f79377b1f71ee550e8525987b5a585e8c379L-1",
                    "lines": [
                      {
                        "line": "import config\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "import requests\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "import json\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "Base = declarative_base()\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "class EmployeeData(Base):\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    __tablename__ = 'employee_data'\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    id = Column(Integer, primary_key=True)\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name = Column(String(120))\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    department = Column(String(120))\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    jobTitle = Column(String(120))\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    email = Column(String(120))\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mobilePhone = Column(String(120))\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, name, department, jobTitle, email, id, mobilePhone):\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.name = name\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.department = department\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.jobTitle = jobTitle\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.email = email\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.id = id\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.mobilePhone = mobilePhone\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "engine = create_engine('sqlite:///employee_db.db')\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "connection = engine.connect()\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "Base.metadata.create_all(engine)\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "api_key = 'YOURS_BAMBOOHR_APIKEY'\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "url = 'https://' + api_key + ':x@api.bamboohr.com/api/gateway.php/DOMAIN_NAME/v1/employees/directory'\n",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "url = 'https://' + config.API_KEY + ':x@api.bamboohr.com/api/gateway.php/' + config.DOMAIN +'/v1/employees/directory'\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/abersheeran/websocks/commit/76cd2cf07b5b1c63994c4627474e4efa4d8e8de8?diff=split#diff-2eaea93a04442331f03fc1e80b20e85bffe9f8479a3c196b7da91c4f33ccef93L-1",
                    "lines": [
                      {
                        "line": "username = \"abersheeran\"\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password = \"websocks\"\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "username = os.environ['WEBSOCKS_USER']\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "password = os.environ['WEBSOCKS_PASS']\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/blacknbunny/CVE-2018-10933/commit/f6c74445263d37af575ab3aee65e163f3c95e6b8?diff=split#diff-35181191f6c2da1b4aece960ff86f898381798d12642710da4ce8793deb4aa59L-1",
                    "lines": [
                      {
                        "line": "import sys, paramiko, logging\n",
                        "lineNumber": 0,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "new_auth_accept = paramiko.auth_handler.AuthHandler._handler_table[paramiko.common.MSG_USERAUTH_SUCCESS]\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "def auth_accept(*args, **kwargs): return new_auth_accept(*args, **kwargs)\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": " \n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "paramiko.auth_handler.AuthHandler._handler_table.update({paramiko.common.MSG_USERAUTH_REQUEST: auth_accept,})\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "logging.basicConfig(stream=sys.stderr, level=logging.DEBUG)\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "client = paramiko.SSHClient()\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "client.set_missing_host_key_policy(paramiko.WarningPolicy())\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "client.connect(\"127.0.0.1\", port=2222, username=\"root\", password=\"\", pkey=None, key_filename=\"fake.key\")\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client.connect(sys.argv[1], port=int(sys.argv[2]), username=sys.argv[3], password=\"\", pkey=None, key_filename=sys.argv[4])\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "command = sys.argv[5]\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "python/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CodeInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/nicholasbishop/blender/commit/079deb7b3957d79d514592f8cda2678c68296e1b?diff=split#diff-5c03f71b01d123d55928208c32987eebaaf16043abb930d98256aa14981fff30L-1",
                    "lines": [
                      {
                        "line": "import json\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "import netrender\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "from netrender.utils import *\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "import netrender.client as client\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "import netrender.model\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netslave_bake(bpy.types.Operator):\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''NEED DESCRIPTION'''\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netslavebake\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Bake all in file\"\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "        scene = context.scene\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "        netsettings = scene.network_render\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "        filename = bpy.data.filepath\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "        path, name = os.path.split(filename)\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        root, ext = os.path.splitext(name)\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "        default_path = path + os.sep + \"blendcache_\" + root + os.sep # need an API call for that\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        relative_path = os.sep + os.sep + \"blendcache_\" + root + os.sep\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Force all point cache next to the blend file\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        for object in bpy.data.objects:\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "            for modifier in object.modifiers:\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if modifier.type == 'FLUID_SIMULATION' and modifier.settings.type == \"DOMAIN\":\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.settings.path = relative_path\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    bpy.ops.fluid.bake({\"active_object\": object, \"scene\": scene})\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "                elif modifier.type == \"CLOTH\":\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.frame_step = 1\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.use_disk_cache = True\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.use_external = False\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "                elif modifier.type == \"SOFT_BODY\":\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.frame_step = 1\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.use_disk_cache = True\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.point_cache.use_external = False\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "                elif modifier.type == \"SMOKE\" and modifier.smoke_type == \"TYPE_DOMAIN\":\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_low.use_step = 1\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_low.use_disk_cache = True\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_low.use_external = False\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_high.use_step = 1\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_high.use_disk_cache = True\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    modifier.domain_settings.point_cache_high.use_external = False\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "            # particles modifier are stupid and don't contain data\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "            # we have to go through the object property\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "            for psys in object.particle_systems:\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "                psys.point_cache.use_step = 1\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "                psys.point_cache.use_disk_cache = True\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "                psys.point_cache.use_external = False\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "                psys.point_cache.filepath = relative_path\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        bpy.ops.ptcache.bake_all()\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        #bpy.ops.wm.save_mainfile(filepath = path + os.sep + root + \"_baked.blend\")\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return {'FINISHED'}\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def invoke(self, context, event):\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.execute(context)\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netclientanim(bpy.types.Operator):\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Start rendering an animation on network'''\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netclientanim\"\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Animation on network\"\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "        scene = context.scene\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "        netsettings = scene.network_render\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "        conn = clientConnection(netsettings.server_address, netsettings.server_port, self.report)\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if conn:\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "            # Sending file\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "            scene.network_render.job_id = client.clientSendJob(conn, scene, True)\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "            conn.close()\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "        bpy.ops.render.render('INVOKE_AREA', animation=True)\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return {'FINISHED'}\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def invoke(self, context, event):\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.execute(context)\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netclientrun(bpy.types.Operator):\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Start network rendering service'''\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netclientstart\"\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Start Service\"\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "        bpy.ops.render.render('INVOKE_AREA', animation=True)\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return {'FINISHED'}\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def invoke(self, context, event):\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.execute(context)\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netclientsend(bpy.types.Operator):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Send Render Job to the Network'''\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netclientsend\"\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Send job\"\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "        scene = context.scene\n",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "        netsettings = scene.network_render\n",
                        "lineNumber": 142,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:\n",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "            conn = clientConnection(netsettings.server_address, netsettings.server_port, self.report)\n",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if conn:\n",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "                # Sending file\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "                scene.network_render.job_id = client.clientSendJob(conn, scene, True)\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "                conn.close()\n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.report('INFO', \"Job sent to master\")\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except Exception as err:\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.report('ERROR', str(err))\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return {'FINISHED'}\n",
                        "lineNumber": 156,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def invoke(self, context, event):\n",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.execute(context)\n",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netclientsendframe(bpy.types.Operator):\n",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Send Render Job with current frame to the Network'''\n",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netclientsendframe\"\n",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Send current frame job\"\n",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "        scene = context.scene\n",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "        netsettings = scene.network_render\n",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:\n",
                        "lineNumber": 174,
                        "lineChange": "none"
                      },
                      {
                        "line": "            conn = clientConnection(netsettings.server_address, netsettings.server_port, self.report)\n",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if conn:\n",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "                # Sending file\n",
                        "lineNumber": 178,
                        "lineChange": "none"
                      },
                      {
                        "line": "                scene.network_render.job_id = client.clientSendJob(conn, scene, False)\n",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "                conn.close()\n",
                        "lineNumber": 180,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self.report('INFO', \"Job sent to master\")\n",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except Exception as err:\n",
                        "lineNumber": 182,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.report('ERROR', str(err))\n",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return {'FINISHED'}\n",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def invoke(self, context, event):\n",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return self.execute(context)\n",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 190,
                        "lineChange": "none"
                      },
                      {
                        "line": "class RENDER_OT_netclientstatus(bpy.types.Operator):\n",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "    '''Refresh the status of the current jobs'''\n",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_idname = \"render.netclientstatus\"\n",
                        "lineNumber": 193,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bl_label = \"Client Status\"\n",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def poll(cls, context):\n",
                        "lineNumber": 197,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return True\n",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def execute(self, context):\n",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "        netsettings = context.scene.network_render\n",
                        "lineNumber": 201,
                        "lineChange": "none"
                      },
                      {
                        "line": "        conn = clientConnection(netsettings.server_address, netsettings.server_port, self.report)\n",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 203,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if conn:\n",
                        "lineNumber": 204,
                        "lineChange": "none"
                      },
                      {
                        "line": "            conn.request(\"GET\", \"/status\")\n",
                        "lineNumber": 205,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response = conn.getresponse()\n",
                        "lineNumber": 207,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.read()\n",
                        "lineNumber": 207,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            content = response.read()\n",
                        "lineNumber": 208,
                        "lineChange": "added"
                      },
                      {
                        "line": "            print( response.status, response.reason )\n",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 210,
                        "lineChange": "none"
                      },
                      {
                        "line": "            jobs = (netrender.model.RenderJob.materialize(j) for j in eval(str(response.read(), encoding='utf8')))\n",
                        "lineNumber": 210,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            jobs = (netrender.model.RenderJob.materialize(j) for j in json.loads(str(content, encoding='utf8')))\n",
                        "lineNumber": 211,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/YYJeffrey/wool/commit/e30c30e5a94bc7518b787606e8eb12af015f878c?diff=split#diff-b90040db20fc1b9ed412c9f9cef20303d9d4b73524b6ea64dffd38c482e3a8a6L-1",
                    "lines": [
                      {
                        "line": "import json\r\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "import random\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import string\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import requests\r\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "import time\r\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "import re\r\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "import os\r\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "from colorama import init, Fore\r\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "GITHUB_URL = \"Github项目地址: https://github.com/YYJeffrey/wool\"\r\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "UA = [\r\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\",\r\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36\",\r\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2226.0 Safari/537.36\",\r\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.4; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36\",\r\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36\",\r\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1500.55 Safari/537.36\",\r\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36\",\r\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36\",\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36\",\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.90 Safari/537.36\"\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "]\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "TRY_COUNT = 16  # 获取ID尝试次数\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "TIME_OUT = 30  # 请求超时时间\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "class Guerrill:\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    url = \"https://www.guerrillamail.com/ajax.php\"\r\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    count = 0\r\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self):\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.session = None\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.headers = p.get_headers()\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.mid = \"\"\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.email = \"\"\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.code = \"\"\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get_email(self):\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Get Site Session\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = {\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"email_user\": ''.join(random.sample(string.ascii_letters + string.digits, 9)),\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"lang\": \"zh\",\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"site\": \"guerrillamail.com\",\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"in\": \" 设置 取消\"\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        session = requests.session()\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res = session.post(url=self.url + \"?f=set_email_user\", data=data, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        email = re.search(r'\"email_addr\":\"(.*?)\"', res.text.strip()).group(1)\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "        print(\"{tip} 获取Email: {email}\".format(tip=Color.green(\"[成功]\"), email=email))\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.session = session\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.email = email\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return email\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def _get_mid(self):\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Get Mail ID\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        time.sleep(2)\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        url = self.url + \"?f=get_email_list&offset=0&site=guerrillamail.com&in={0}&_={1}\" \\\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "            .format(self.email.split(\"@\")[0], int(round(time.time() * 1000)))\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res = self.session.get(url=url, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.count += 1\r\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # noinspection PyBroadException\r\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try:\r\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "            mid = re.search(r'{\"list\":\\[{\"mail_id\":\"(.*?)\"', res.text.strip()).group(1)\r\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "            self.mid = mid\r\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "            print(\"{tip} 获取Email ID: {mid}\".format(tip=Color.green(\"[成功]\"), mid=mid))\r\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        except Exception:\r\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "            print(\"{tip} 第{count}次尝试获取Email ID，将会在尝试{try_count}次后重启程序\"\r\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "                  .format(tip=Color.red(\"[失败]\"), count=self.count, try_count=TRY_COUNT))\r\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if self.count < TRY_COUNT:\r\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "                self._get_mid()\r\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "            else:\r\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "                print(\"{tip} 正在重启程序...\".format(tip=Color.blue(\"[提示]\")))\r\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "                start()\r\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get_data(self):\r\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Get Mail Data\r\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self._get_mid()\r\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "        url = self.url + \"?f=fetch_email&email_id=mr_{0}&site=guerrillamail.com&in={1}&_={2}\" \\\r\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "            .format(self.mid, self.email.split(\"@\")[0], int(round(time.time() * 1000)))\r\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res = self.session.get(url=url, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "        code = re.search(r\"<b>(.*?)<\\\\/b>\", res.text.strip()).group(1)\r\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "        print(\"{tip} 获取Code: {code}\".format(tip=Color.green(\"[成功]\"), code=code))\r\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.code = code\r\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return code\r\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "class Wiki:\r\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    url = \"https://vvoo.in/\"\r\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, email):\r\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.email = email\r\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.cookies = None\r\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.headers = p.get_headers()\r\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.node_arg = []\r\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.ssr = []\r\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "        self.urls = []\r\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def get_code(self):\r\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Send Code To Mail\r\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = {\"email\": self.email}\r\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "        requests.post(url=self.url + \"auth/send\", data=data, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "        print(Color.blue(\"[提示] 正在准备Email ID...\"))\r\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def register(self, code):\r\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "data = {\r\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"email\": self.email,\r\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"name\": self.email.split(\"@\")[0],\r\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"passwd\": self.email,\r\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"repasswd\": self.email,\r\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"code\": \"\",\r\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \"emailcode\": code\r\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "requests.post(url=self.url + \"auth/register\", data=data, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "print(Color.blue(\"[提示] 正在准备节点...\"))\r\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def login(self):\r\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "        data = {\r\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"email\": self.email,\r\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "            \"passwd\": self.email\r\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\r\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "html = requests.post(url=self.url + \"auth/login\", data=data, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "self.cookies = html.cookies\r\n",
                        "lineNumber": 123,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if eval(html.text)['msg'].strip() == \"欢迎回来\":\r\n",
                        "lineNumber": 124,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res = requests.post(url=self.url + \"auth/login\", data=data, headers=self.headers, timeout=TIME_OUT)\r\n",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "self.cookies = res.cookies\r\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "if json.loads(res.text)[\"msg\"] == \"登录成功\":\r\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nicholasbishop/blender/commit/079deb7b3957d79d514592f8cda2678c68296e1b?diff=split#diff-d11001249a30e95551b702c70329c959de1cf7b5553dab76778a119e70282c41L-1",
                    "lines": [
                      {
                        "line": "import json\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "from netrender.utils import *\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "import netrender.model\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "import netrender.repath\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "BLENDER_PATH = sys.argv[0]\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "CANCEL_POLL_SPEED = 2\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "MAX_TIMEOUT = 10\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "INCREMENT_TIMEOUT = 1\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "if platform.system() == 'Windows' and platform.version() >= '5': # Error mode is only available on Win2k or higher, that's version 5\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "    import ctypes\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def SetErrorMode():\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "        val = ctypes.windll.kernel32.SetErrorMode(0x0002)\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ctypes.windll.kernel32.SetErrorMode(val | 0x0002)\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return val\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def RestoreErrorMode(val):\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        ctypes.windll.kernel32.SetErrorMode(val)\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "else:\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def SetErrorMode():\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 0\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def RestoreErrorMode(val):\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        pass\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "def clearSlave(path):\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    shutil.rmtree(path)\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "def slave_Info():\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "    sysname, nodename, release, version, machine, processor = platform.uname()\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "    slave = netrender.model.RenderSlave()\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "    slave.name = nodename\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    slave.stats = sysname + \" \" + release + \" \" + machine + \" \" + processor\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return slave\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "def testCancel(conn, job_id, frame_number):\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        conn.request(\"HEAD\", \"/status\", headers={\"job-id\":job_id, \"job-frame\": str(frame_number)})\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # canceled if job isn't found anymore\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if responseStatus(conn) == http.client.NO_CONTENT:\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return True\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "        else:\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return False\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "def testFile(conn, job_id, slave_id, rfile, JOB_PREFIX, main_path = None):\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "    job_full_path = prefixPath(JOB_PREFIX, rfile.filepath, main_path)\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "    found = os.path.exists(job_full_path)\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if found:\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        found_signature = hashFile(job_full_path)\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "        found = found_signature == rfile.signature\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not found:\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "            print(\"Found file %s at %s but signature mismatch!\" % (rfile.filepath, job_full_path))\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "            job_full_path = prefixPath(JOB_PREFIX, rfile.filepath, main_path, force = True)\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if not found:\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "        # Force prefix path if not found\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "        job_full_path = prefixPath(JOB_PREFIX, rfile.filepath, main_path, force = True)\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "        temp_path = os.path.join(JOB_PREFIX, \"slave.temp\")\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        conn.request(\"GET\", fileURL(job_id, rfile.index), headers={\"slave-id\":slave_id})\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = conn.getresponse()\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if response.status != http.client.OK:\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return None # file for job not returned by server, need to return an error code to server\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f = open(temp_path, \"wb\")\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "        buf = response.read(1024)\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "        while buf:\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "            f.write(buf)\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "            buf = response.read(1024)\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "        f.close()\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "        os.renames(temp_path, job_full_path)\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    rfile.filepath = job_full_path\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return job_full_path\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "def render_slave(engine, netsettings, threads):\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    timeout = 1\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    engine.update_stats(\"\", \"Network render node initiation\")\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "    conn = clientConnection(netsettings.server_address, netsettings.server_port)\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if conn:\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        conn.request(\"POST\", \"/slave\", repr(slave_Info().serialize()))\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response = conn.getresponse()\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.read()\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "        slave_id = response.getheader(\"slave-id\")\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "        NODE_PREFIX = os.path.join(netsettings.path, \"slave_\" + slave_id)\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if not os.path.exists(NODE_PREFIX):\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "            os.mkdir(NODE_PREFIX)\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "        engine.update_stats(\"\", \"Network render connected to master, waiting for jobs\")\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "        while not engine.test_break():\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "            conn.request(\"GET\", \"/job\", headers={\"slave-id\":slave_id})\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response = conn.getresponse()\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if response.status == http.client.OK:\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "                timeout = 1 # reset timeout on new job\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "                job = netrender.model.RenderJob.materialize(eval(str(response.read(), encoding='utf8')))\n",
                        "lineNumber": 132,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                job = netrender.model.RenderJob.materialize(json.loads(str(response.read(), encoding='utf8')))\n",
                        "lineNumber": 133,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-94"
                ]
              }
            },
            {
              "id": "python/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "NoHardcodedPasswords",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mspreitz/MobileSandbox/commit/da3b1805cb2e01c82d4b378aec004bfced7b1d55?diff=split#diff-09b135b0d5f0b0ad094858769db9b537a805fe47de372187ae2fc4b96f05d30dL-1",
                    "lines": [
                      {
                        "line": "conn = psycopg2.connect(dbname='ms_db', user='ms_user', password=\"2HmUKLvf\")\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "conn = psycopg2.connect(dbname=misc_config.SQL_DB, user=misc_config.SQL_USER, password=misc_config.SQL_PASSWORD)\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Mirantis/kqueen/commit/8d3fb4d8130b5abff6212f20b0034e03c4438d69?diff=split#diff-6a14ec1b3250d541ae942ee17c1a7d14dd843407c914649113212972c0a95c07L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    # DEMO LOGIN\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.config.update(dict(\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        USERNAME='admin',\n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        PASSWORD='default',\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        SECRET_KEY='secret'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ))\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    loaded = app.config.from_pyfile('config.py', silent=True)\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if not loaded:\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        logging.warning('Config file kqueen.cfg could not be loaded.')\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/video-annotation-project/video-annotation-tool/commit/7e5a129f1c0d09024c218bf22108e2f2c09871a8?diff=split#diff-4ad690c280f2ca6c899cbbf7dd0cb9f619287ebb25fdd2ff5ccfdaa456b819deL-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "# DO NOT PUSH PASSWORD \n",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "#DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = '2yG5$A#LkJkvnWh*'\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "DB_PASSWORD = os.getenv(\"DB_PASSWORD\")\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 50,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/HardcodedNonCryptoSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/secretsmanager/secretsmanager_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 13,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e4891577be237ef4635442cf2c540d1ef78245f5d48c20b4276f3a8f0613391c",
            "1": "3c024e1e.1204825f.ecdc6b9e.139c59a8.d950a076.ba14daf2.84c5b8f2.d821223e.3c024e1e.1204825f.ecdc6b9e.139c59a8.d950a076.ba14daf2.84c5b8f2.d821223e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/secretsmanager/secretsmanager_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/secretsmanager/secretsmanager_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 355,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 1,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1e0b7e36924fa6bee1ffd00615ea3142ab74c0c77386fcd35e12341bc5a7b5e",
            "1": "f5fae8a7.d7706ef6.79e62dc9.c24dd7b0.36faa32d.a1632d4f.57775b0b.742d9b21.f5fae8a7.d7706ef6.79e62dc9.c24dd7b0.36faa32d.a1632d4f.57775b0b.742d9b21"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 1,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 1,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22cec8f65559e59d534dd1a319e15112bdc811d433c14fee4f6cb5ae5612c989",
            "1": "f5fae8a7.d7706ef6.0d920f03.cec394eb.fcdf4a01.5bf57630.ce0d7dc6.514f6344.f5fae8a7.d7706ef6.0d920f03.cec394eb.fcdf4a01.5bf57630.ce0d7dc6.514f6344"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/ecs/ecs_task_definitions_no_environment_secrets/ecs_task_definitions_no_environment_secrets_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 1,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 405,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_no_expired_server_certificates_stored/iam_no_expired_server_certificates_stored_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 13,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "351bad0247bd69cba7d5f6e4967cef424374e45db61f1060fee499715c24455d",
            "1": "a6b41d6e.48ae07c6.79e62dc9.fb966e45.54dafe5c.ba14daf2.a2237efa.f46ed94e.a6b41d6e.48ae07c6.79e62dc9.fb966e45.54dafe5c.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_no_expired_server_certificates_stored/iam_no_expired_server_certificates_stored_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_no_expired_server_certificates_stored/iam_no_expired_server_certificates_stored_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 355,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/HardcodedNonCryptoSecret/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/awslambda/awslambda_function_no_secrets_in_code/awslambda_function_no_secrets_in_code_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82e61e1771d73fa7866d65f140693b4d2beccc7b4647b3483ea161dfc9b94eaa",
            "1": "a9068fc0.498392dd.79e62dc9.98569367.4b11f87a.ba14daf2.22c94399.aeb0f2ba.a9068fc0.498392dd.79e62dc9.98569367.4b11f87a.ba14daf2.22c94399.aeb0f2ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/awslambda/awslambda_function_no_secrets_in_code/awslambda_function_no_secrets_in_code_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 46,
                            "startColumn": 29,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/awslambda/awslambda_function_no_secrets_in_code/awslambda_function_no_secrets_in_code_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 355,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copytree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27)",
              "[shutil.copytree](28)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 9,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9c1606c81f834c387a4533b37d0e084b11fa7a77212f6c9b7b0b88406baf470",
            "1": "2d06e3d6.590fdce1.8748ab10.139c59a8.0cbe2885.ba14daf2.081ac3f4.545e9171.adbad3a7.14acb82c.f37b2616.3b7baf44.0cbe2885.ba14daf2.0c6a3ec9.81eab554"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 8,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 46,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 42,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 45,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 36,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 36,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 21,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 37,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28)",
              "[open](29)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 199,
                  "startColumn": 17,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02473d1139fcf36250822b4a24d250b2e3089654939a16ffdaef533e1418e645",
            "1": "f6e19239.0a50a00c.79e62dc9.fd7991a7.c74dbe72.244c4cca.ebc275cd.f4dd9d21.def51e5d.4c22e90b.f37b2616.60295714.4a7dcb5e.5db29aed.0c6a3ec9.005eb646"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 54,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 66,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 45,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 28,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 152,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 21,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 21,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 197,
                            "endLine": 197,
                            "startColumn": 21,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 28,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 203,
                            "endLine": 203,
                            "startColumn": 42,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 42,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 20,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 9,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 207,
                            "endLine": 207,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/outputs/html.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 208,
                            "endLine": 208,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40)",
              "[open](41)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222,
                  "startColumn": 9,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "123f130459408f788e3950e8edc1eaaa3a9beed864793c86bf05e57e9847a09f",
            "1": "a4c3c8a0.e3d9b656.2683ade8.139c59a8.90e47853.ba14daf2.9581ffb2.aeaa6411.adbad3a7.435f91bb.f37b2616.3b7baf44.4a7dcb5e.cd3cc326.0c6a3ec9.005eb646"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 67,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 56,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 48,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 48,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/providers/aws/lib/security_hub/security_hub.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/providers/aws/lib/security_hub/security_hub.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/providers/aws/lib/security_hub/security_hub.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/providers/aws/lib/security_hub/security_hub.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25)",
              "[shutil.rmtree](26)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 246,
                  "endLine": 246,
                  "startColumn": 9,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "27c1cb8678f9c31a8a394eb28268e5e1071b69afc6d7303decbec5cd698361fa",
            "1": "26f1400e.590fdce1.79e62dc9.98569367.4c259121.ba14daf2.c01b2861.ebed174f.adbad3a7.14acb82c.f37b2616.3b7baf44.0cbe2885.a5d7f69f.0c6a3ec9.81eab554"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 21,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 8,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 8,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 33,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 72,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 46,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 35,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[subprocess.Popen](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contrib/wazuh/prowler-wrapper.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 16,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "402d0a6c98195dcad2d62669adf273c3652d923697b36678d8583acbaeee1b19",
            "1": "637a301a.aafac32d.2f5165b0.4fee8b70.b465fe7c.ba14daf2.081ac3f4.577d1112.6d6cae31.f16887a3.2f5165b0.4fee8b70.18eb27cf.dee43846.167680d3.577d1112"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 45,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 44,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 44,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 165,
                            "endLine": 165,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 52,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 24,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 150,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 42,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 33,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[subprocess.Popen](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contrib/wazuh/prowler-wrapper.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "endLine": 258,
                  "startColumn": 28,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2054608224483fbabd3bc020e2d632c56bd37acabdf195afc5dc263935dd8bef",
            "1": "421ee269.e789395b.4c5e26d3.65a03a60.017f4d1f.997d1fff.0a7337bb.742d9b21.6d6cae31.e789395b.4c5e26d3.355b731e.017f4d1f.dee43846.ef0604d3.50359551"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 12,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 5,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 250,
                            "endLine": 250,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 255,
                            "endLine": 255,
                            "startColumn": 45,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 49,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 46,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 46,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 9,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 18,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 52,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 39,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 24,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 150,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 42,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 33,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/wazuh/prowler-wrapper.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7cc9366df727dd0d6b9c82af5243672397af4b99c44b195c53b274f072a854d",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a8683e6f270620b1315fe9cfa66776b1fe83fd4328731935c0377598afbb71e",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.d9d8e87a.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.d9d8e87a.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0fef6cac4ab0bb7fd74e10f2110bf2d361e8de39f821e912679928d16c27e301",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.bc636bc3.439756a9.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.bc636bc3.439756a9.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c0805deb8d0467bcfce5975a69494b4fe75a22f7b800b3ed74fafbbccc4ba5a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "86007fdb39e61deaf04a580a09b32073369f0082668efb0790615660b85323d8",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.8e3afe63.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.8e3afe63.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f765410221ecc41f743afd8381984cd078c701f6a4c828143970260c59279385",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9503f18d18e3d3f131b70efc8030e0a5c52752bb7122b3b9e1a19e238700badc",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "acc061bf291b85e004727479b828b8db0af79d5cc0e7230cae47cc248077e982",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3727067feab795a1755c338457734ae4c266b54d05804ab56f08646a348b58dd",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5bd9922ece47e029ebeccc913e7922ad4271aaf46e364705ba9fb8534e403d5d",
            "1": "c778a8d5.c48d5c59.532c4417.44a69e74.a5984bf7.f82ffecb.eb0045fe.b73632dc.c778a8d5.c48d5c59.532c4417.44a69e74.a5984bf7.f82ffecb.eb0045fe.b73632dc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ae16b010696d8334f9fb08415573a97ba656d82a24b31e2378d55c9242d08e5",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f.06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 421,
                  "endLine": 421,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56a440c91cc7ed7ca64a34600923b965beb89d06cd3f627297d2437ac7390d41",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.6acc0017.ebed174f.06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.6acc0017.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 421,
                            "endLine": 421,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05f5493fdd35b2aed720ea22bf45430fa3b1e835f2d3f8b4a039943d4b30c8f9",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.11eb93d3.06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.11eb93d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 480,
                  "endLine": 480,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c89cd1bd2e5ed3707e7a370b4fba6a1fce3cbfc5222f81caf730fd92156fd03f",
            "1": "22486993.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f.22486993.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb69278defa87b13707515e6a19eee857358a91bd65256492e49a6119cf62b06",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73880432be2d8e8eec3cf0310b60effa605b59c1f73d488c32a082bca30792b3",
            "1": "06d164ff.9dc5b1a3.20c6068b.9c7d06ac.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.20c6068b.9c7d06ac.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8829107b44e9d013e08a989a50a2c6e702da31a805ae13046fcc15524cc7ca8a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d7a34326a6e9518ef5a6ce1cc39fccebed87252b274e265a1956c341d287e2ec",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f0338d2b55c590fdeb64d06e878084b389d865e9522d45ef5143535d0c29eef",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd8b56fd0519b149e8cda61247acaa52e1de61840f3a19e3f9575722f1d0b981",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d42c49efc9318f88679d472508d93fbd0f17f524e24716b92779356658f18fa3",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.27dc2265.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.27dc2265.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8864d0a618db4d9c60c7c32e61303192d00492d77340760e495cd7d14a7e5afd",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d6870dba4c7c8f8451354c8daa6095f68169ffe594f51f3bb0f1fef1063c7c8",
            "1": "06d164ff.bf7aebf9.dd56e935.20301996.4d764761.f82ffecb.b69c6615.7e855334.06d164ff.bf7aebf9.dd56e935.20301996.4d764761.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93a6a046ec56bb8f0117d3679ee9368a4f3694535b6bae64331a3fd6506b6df0",
            "1": "06d164ff.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.a523290f.7e855334.06d164ff.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.a523290f.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51b3959331544026faafc9fa18aaac1935ea5a05c44c38279d2a0e1573d851de",
            "1": "5fe04099.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.b69c6615.7e855334.5fe04099.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9870f2291de2a558987f1c0e5172d1f74310c62a4093216e1047b2fd1dc1546",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1159ede7aa763d55957b4e53f3adb33df30476b178d6dcec730a270c3501e87",
            "1": "06d164ff.9dc5b1a3.79e62dc9.ad89611b.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.ad89611b.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d75adaeadde0deffdbba0d1aea7df40cc88ea7285ac5fbb664502b2c383c00c4",
            "1": "40165265.9dc5b1a3.79e62dc9.52047c28.a5984bf7.f82ffecb.b69c6615.d382fd7d.40165265.9dc5b1a3.79e62dc9.52047c28.a5984bf7.f82ffecb.b69c6615.d382fd7d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "177011bc98845231037a31646cc8f60b500b0c87309b726409ae8c8649fcd595",
            "1": "06d164ff.9dc5b1a3.79e62dc9.60e82942.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.60e82942.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a50b8de0ce0858318d015812bc68096e38a8561061164c70dbba4cca11379d0a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.0b19a60b.a5984bf7.f82ffecb.848a66d5.7e855334.06d164ff.9dc5b1a3.79e62dc9.0b19a60b.a5984bf7.f82ffecb.848a66d5.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a83b90ae6ef1561f0befdb635615c02bbff733c7d3fb195d2a0f21814b1ed4e0",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e1c34e94f7a847ab88596e705b0efecc797f79490862012e6afda64b52395d9",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b096f325b9f87d88f0498b0d3b267940556e5ca4f5cccea3d39d7dca9e076b6",
            "1": "5ffa36a4.9dc5b1a3.79e62dc9.46b16a21.e42d767f.07edfcfb.b69c6615.7e855334.5ffa36a4.9dc5b1a3.79e62dc9.46b16a21.e42d767f.07edfcfb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57c6ca5a740deba82ffabe5729ccac6580c57f2ee023ae6bffd76a950e5e4a84",
            "1": "e9f64c78.2acc3c16.75898c75.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.e9f64c78.2acc3c16.75898c75.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 16,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 147,
                  "endLine": 147,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "25daaed20991d16bcd0027294730d759cb58c299acf89e5eecd228a8a8a95709",
            "1": "06d164ff.2cbff29c.79e62dc9.98569367.a5984bf7.79a88c05.b69c6615.7e855334.06d164ff.2cbff29c.79e62dc9.98569367.a5984bf7.79a88c05.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 16,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65e1d58dbfcdc799b4489665402f7df71a73ddab13ee8a573d3c96f21e56a333",
            "1": "192865d8.9dc5b1a3.79e62dc9.846a2b1e.bc24087f.f82ffecb.b69c6615.7e855334.192865d8.9dc5b1a3.79e62dc9.846a2b1e.bc24087f.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "039b418db8392de997354adad34128bf5bf4ebea2c3b51ffa6aa587b8cf22fcc",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.ba042e81.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.ba042e81.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a8fb121d432c52496c4d0382ee0c08f9c57c6758a2fe26ead0b86b6beccb3201",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.820a810d.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.820a810d.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2821c05ff9869050687c72dca5e04e14c88348f5286b508a3385c1c20648d46d",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7909b857ddb4aa137cfe24e9cb97c74a9318364bf197822f641c1b8bcfb295b",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a53ce90498ec603b75b029ce00b640a1b1ed17e863f0d0720e410203c005f00e",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in here.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in here.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf745618d0d9eada51dacd03c1927a996072d3e78703e2358f17dfeb7cb6bceb",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7cc9366df727dd0d6b9c82af5243672397af4b99c44b195c53b274f072a854d",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a8683e6f270620b1315fe9cfa66776b1fe83fd4328731935c0377598afbb71e",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.d9d8e87a.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0fef6cac4ab0bb7fd74e10f2110bf2d361e8de39f821e912679928d16c27e301",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.bc636bc3.439756a9.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_rotate_access_key_90_days/iam_rotate_access_key_90_days_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c0805deb8d0467bcfce5975a69494b4fe75a22f7b800b3ed74fafbbccc4ba5a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "86007fdb39e61deaf04a580a09b32073369f0082668efb0790615660b85323d8",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.8e3afe63.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f765410221ecc41f743afd8381984cd078c701f6a4c828143970260c59279385",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9503f18d18e3d3f131b70efc8030e0a5c52752bb7122b3b9e1a19e238700badc",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "acc061bf291b85e004727479b828b8db0af79d5cc0e7230cae47cc248077e982",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3727067feab795a1755c338457734ae4c266b54d05804ab56f08646a348b58dd",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_45_days_credentials/iam_disable_45_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e4a4903fa11523cf4187a09769473c02acd40d9926a635bec92ae5716cbec3c9",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9580aeac96f1d6ccb626d597f124af759810b43523610914826f6bab424853b",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "232b1891429776ab2cb75eaba7e7559580e79738abcf590419b6e17b5d874072",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "692ec7a8a494f460def51ec32d3a1b9d44d333af8998aad9987d7abf666e12e7",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 202,
                  "endLine": 202,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15e8f63dd537fc434b6871fa77c4470efcac63d224e262dcbb5b9ff616357ff7",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 242,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "98876ea57714aa89be7766043205094e100c93bec96da419c3b37b657e4a5481",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "76ed896237f751460a2c4364dd0c54738d4ac1414d4ff58689c12981e0f5f1d7",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 326,
                  "endLine": 326,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73d1030274951d1b81bad9e195b1a47ba582cd8eddce42965d1eb17e9291517b",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 371,
                  "endLine": 371,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04b5e14d69caf7f04b7b97d034f0abb430db0790e5a8bf7d556a8b6fedb9359b",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 417,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87edc999036d13c698baad27086f68fd76802c82cba8c7ef7c71295212440b0b",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 417,
                            "endLine": 417,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/lib/credentials/credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 417,
                            "endLine": 417,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 21,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5bd9922ece47e029ebeccc913e7922ad4271aaf46e364705ba9fb8534e403d5d",
            "1": "c778a8d5.c48d5c59.532c4417.44a69e74.a5984bf7.f82ffecb.eb0045fe.b73632dc.c778a8d5.c48d5c59.2afa53c2.44a69e74.a5984bf7.ba14daf2.eb0045fe.b73632dc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 200,
                  "startColumn": 28,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1547b0de614f5cc93543d46ebf4fb9e543c463f9b67f507c3568ddfe8938f915",
            "1": "06d164ff.d5b25795.79e62dc9.e41bd82b.a5984bf7.3eaccbc1.b69c6615.c0f5e802.2d06e3d6.f73b47b6.2afa53c2.e41bd82b.a5984bf7.ba14daf2.081ac3f4.c0f5e802"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 201,
                  "endLine": 201,
                  "startColumn": 25,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb7a443839f95b2a1abc858274071594e3f319646a1f9bd2930e661a2858629c",
            "1": "06d164ff.d5b25795.79e62dc9.98569367.a5984bf7.f82ffecb.36066aaa.c08885c8.2d06e3d6.f73b47b6.2afa53c2.139c59a8.a5984bf7.ba14daf2.36066aaa.c08885c8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 201,
                            "endLine": 201,
                            "startColumn": 25,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_administrator_access_with_mfa/iam_administrator_access_with_mfa_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 214,
                            "endLine": 214,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ae16b010696d8334f9fb08415573a97ba656d82a24b31e2378d55c9242d08e5",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f.2d06e3d6.ab5d79e8.79e62dc9.d3bd4968.5192d5be.ba14daf2.081ac3f4.b60afa86"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 303,
                  "endLine": 303,
                  "startColumn": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1b450f8690fa3a3130b3e9cc6eb6c81ac5dbd7198c67948664d4c82b395b835",
            "1": "06d164ff.d5b25795.3ea7c12e.139c59a8.a5984bf7.ba14daf2.081ac3f4.7d414df2.e06468b8.b5a115c3.79e62dc9.139c59a8.a5984bf7.70d5bca0.081ac3f4.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 309,
                  "endLine": 309,
                  "startColumn": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af8857f15ed81ede6bf5d36d089efb8111f60d159b34ac6e60b0b8e6e31a7f9e",
            "1": "06d164ff.d5b25795.3ea7c12e.139c59a8.a5984bf7.ba14daf2.081ac3f4.7d414df2.e06468b8.b5a115c3.79e62dc9.139c59a8.a5984bf7.70d5bca0.081ac3f4.0990edd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 309,
                            "endLine": 309,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 389,
                  "endLine": 389,
                  "startColumn": 22,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a22e6bfdb86978772cda40cb57d4d4fa9fafce15ca26d5696b43e6718e7c1796",
            "1": "06d164ff.d5b25795.3ea7c12e.139c59a8.a5984bf7.ba14daf2.081ac3f4.7d414df2.06d164ff.5a67644d.79e62dc9.139c59a8.3fd31cdc.6486c785.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 389,
                            "endLine": 389,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 389,
                            "endLine": 389,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 421,
                  "endLine": 421,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56a440c91cc7ed7ca64a34600923b965beb89d06cd3f627297d2437ac7390d41",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.6acc0017.ebed174f.2d06e3d6.ab5d79e8.79e62dc9.139c59a8.5192d5be.a5d7f69f.6acc0017.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 421,
                            "endLine": 421,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 423,
                            "endLine": 423,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05f5493fdd35b2aed720ea22bf45430fa3b1e835f2d3f8b4a039943d4b30c8f9",
            "1": "06d164ff.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.11eb93d3.2d06e3d6.ab5d79e8.79e62dc9.139c59a8.5192d5be.a5d7f69f.081ac3f4.11eb93d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 454,
                            "endLine": 454,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 456,
                            "endLine": 456,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 480,
                  "endLine": 480,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c89cd1bd2e5ed3707e7a370b4fba6a1fce3cbfc5222f81caf730fd92156fd03f",
            "1": "22486993.ab5d79e8.79e62dc9.73cd7f67.5192d5be.f82ffecb.b69c6615.ebed174f.22486993.ab5d79e8.79e62dc9.139c59a8.5192d5be.ba14daf2.081ac3f4.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 480,
                            "endLine": 480,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_service_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 482,
                            "endLine": 482,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb69278defa87b13707515e6a19eee857358a91bd65256492e49a6119cf62b06",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73880432be2d8e8eec3cf0310b60effa605b59c1f73d488c32a082bca30792b3",
            "1": "06d164ff.9dc5b1a3.20c6068b.9c7d06ac.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.20c6068b.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8829107b44e9d013e08a989a50a2c6e702da31a805ae13046fcc15524cc7ca8a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d7a34326a6e9518ef5a6ce1cc39fccebed87252b274e265a1956c341d287e2ec",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f0338d2b55c590fdeb64d06e878084b389d865e9522d45ef5143535d0c29eef",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd8b56fd0519b149e8cda61247acaa52e1de61840f3a19e3f9575722f1d0b981",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_30_days_credentials/iam_disable_30_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d42c49efc9318f88679d472508d93fbd0f17f524e24716b92779356658f18fa3",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.27dc2265.f82ffecb.b69c6615.7e855334.a6b41d6e.9dc5b1a3.79e62dc9.139c59a8.10a709c0.ba14daf2.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8864d0a618db4d9c60c7c32e61303192d00492d77340760e495cd7d14a7e5afd",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.9dc5b1a3.79e62dc9.139c59a8.10a709c0.ba14daf2.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_root_mfa_enabled/iam_root_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8d6870dba4c7c8f8451354c8daa6095f68169ffe594f51f3bb0f1fef1063c7c8",
            "1": "06d164ff.bf7aebf9.dd56e935.20301996.4d764761.f82ffecb.b69c6615.7e855334.4912df62.bf7aebf9.dd56e935.139c59a8.10a709c0.ba14daf2.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93a6a046ec56bb8f0117d3679ee9368a4f3694535b6bae64331a3fd6506b6df0",
            "1": "06d164ff.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.a523290f.7e855334.4912df62.bf7aebf9.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51b3959331544026faafc9fa18aaac1935ea5a05c44c38279d2a0e1573d851de",
            "1": "5fe04099.bf7aebf9.79e62dc9.20301996.bfafc0f2.f82ffecb.b69c6615.7e855334.4912df62.bf7aebf9.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_two_active_access_key/iam_user_two_active_access_key_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9870f2291de2a558987f1c0e5172d1f74310c62a4093216e1047b2fd1dc1546",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1159ede7aa763d55957b4e53f3adb33df30476b178d6dcec730a270c3501e87",
            "1": "06d164ff.9dc5b1a3.79e62dc9.ad89611b.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d75adaeadde0deffdbba0d1aea7df40cc88ea7285ac5fbb664502b2c383c00c4",
            "1": "40165265.9dc5b1a3.79e62dc9.52047c28.a5984bf7.f82ffecb.b69c6615.d382fd7d.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "177011bc98845231037a31646cc8f60b500b0c87309b726409ae8c8649fcd595",
            "1": "06d164ff.9dc5b1a3.79e62dc9.60e82942.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_mfa_enabled_console_access/iam_user_mfa_enabled_console_access_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a50b8de0ce0858318d015812bc68096e38a8561061164c70dbba4cca11379d0a",
            "1": "06d164ff.9dc5b1a3.79e62dc9.0b19a60b.a5984bf7.f82ffecb.848a66d5.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a83b90ae6ef1561f0befdb635615c02bbff733c7d3fb195d2a0f21814b1ed4e0",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 75,
                            "endLine": 75,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e1c34e94f7a847ab88596e705b0efecc797f79490862012e6afda64b52395d9",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_user_hardware_mfa_enabled/iam_user_hardware_mfa_enabled_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 16,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b096f325b9f87d88f0498b0d3b267940556e5ca4f5cccea3d39d7dca9e076b6",
            "1": "5ffa36a4.9dc5b1a3.79e62dc9.46b16a21.e42d767f.07edfcfb.b69c6615.7e855334.e06468b8.9dc5b1a3.79e62dc9.46b16a21.e42d767f.ba14daf2.081ac3f4.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 16,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57c6ca5a740deba82ffabe5729ccac6580c57f2ee023ae6bffd76a950e5e4a84",
            "1": "e9f64c78.2acc3c16.75898c75.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.e06468b8.2acc3c16.75898c75.139c59a8.a5984bf7.ba14daf2.081ac3f4.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 16,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 147,
                  "endLine": 147,
                  "startColumn": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "25daaed20991d16bcd0027294730d759cb58c299acf89e5eecd228a8a8a95709",
            "1": "06d164ff.2cbff29c.79e62dc9.98569367.a5984bf7.79a88c05.b69c6615.7e855334.e06468b8.2cbff29c.79e62dc9.139c59a8.a5984bf7.79a88c05.081ac3f4.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 16,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "startColumn": 16,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "65e1d58dbfcdc799b4489665402f7df71a73ddab13ee8a573d3c96f21e56a333",
            "1": "192865d8.9dc5b1a3.79e62dc9.846a2b1e.bc24087f.f82ffecb.b69c6615.7e855334.e06468b8.ecc4e7fd.79e62dc9.846a2b1e.bc24087f.a5d7f69f.75d4ed92.7e855334"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 16,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_policy_attached_only_to_group_or_roles/iam_policy_attached_only_to_group_or_roles_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "039b418db8392de997354adad34128bf5bf4ebea2c3b51ffa6aa587b8cf22fcc",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.ba042e81.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a8fb121d432c52496c4d0382ee0c08f9c57c6758a2fe26ead0b86b6beccb3201",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.820a810d.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.6b3dc730"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2821c05ff9869050687c72dca5e04e14c88348f5286b508a3385c1c20648d46d",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.b3e293bc.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7909b857ddb4aa137cfe24e9cb97c74a9318364bf197822f641c1b8bcfb295b",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.4737d8a2.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a53ce90498ec603b75b029ce00b640a1b1ed17e863f0d0720e410203c005f00e",
            "1": "06d164ff.9dc5b1a3.79e62dc9.98569367.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 192,
                            "endLine": 192,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "startColumn": 16,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf745618d0d9eada51dacd03c1927a996072d3e78703e2358f17dfeb7cb6bceb",
            "1": "06d164ff.9dc5b1a3.79e62dc9.d6cace8c.a5984bf7.f82ffecb.b69c6615.7e855334.a6b41d6e.ecc4e7fd.79e62dc9.139c59a8.10a709c0.a5d7f69f.34886d5e.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 16,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/iam/iam_disable_90_days_credentials/iam_disable_90_days_credentials_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/aws_provider_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37d6bec679c770b5f18896ca2400681093d26ee12d8a92eaeab6026abc4eee95",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/aws_provider_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "70837bfea57085eba36e55b17eb73995277dd24cadce05660162bc1da223c4be",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/aws_provider_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb690e04670bfb0fbdf52724dd086e6819fe517d1bd7ab162659ca753317c578",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/aws_provider_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 238,
                  "endLine": 238,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1f48c256307e78c7d8c70e381db4706b19975c2c4ef65c9399d6d8304d6dee8",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedCredentials/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in UserName.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[UserName](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/aws_provider_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 321,
                  "endLine": 321,
                  "startColumn": 52,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fe304062d551a6eeb7712ad144d817ff0f64e2675da11eec47741e89d3b73c56",
            "1": "a6b41d6e.d5b25795.baf45a85.139c59a8.a5984bf7.ba14daf2.a2237efa.f46ed94e.a6b41d6e.5a67644d.79e62dc9.139c59a8.c15b6468.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 52,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/aws_provider_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 485,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[importlib.import_module](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 24,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4a6a442053e5fe99e9494531751a707eb05b0a36dbdc79a88484efee36033b02",
            "1": "def51e5d.14acb82c.f37b2616.60295714.70bc8f14.ba14daf2.f6e785cc.ebed174f.def51e5d.14acb82c.f37b2616.60295714.70bc8f14.ba14daf2.0c6a3ec9.ff22e4d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 38,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 19,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 49,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 34,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 19,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 9,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21)",
              "[importlib.import_module](22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 28,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2a38dba6914d85b16fe0a16bfab046510ed36434ab94d1ea39178bc98151b4eb",
            "1": "def51e5d.14acb82c.f37b2616.60295714.70bc8f14.ba14daf2.99437b0a.0c197015.def51e5d.14acb82c.f37b2616.60295714.70bc8f14.ba14daf2.0c6a3ec9.ff22e4d7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 54,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 31,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 34,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 40,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 19,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 370,
                            "endLine": 370,
                            "startColumn": 5,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 9,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34)",
              "[importlib.import_module](35)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 25,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e4d874591e6a2dc235f11777aa89f77250008ed559a56bea3a0bb94e7ac7c0fa",
            "1": "b7a7c2f7.3f303bfc.fccd92cc.139c59a8.234fd8a8.ba14daf2.99437b0a.a7e09e04.ac6eec2d.14acb82c.f37b2616.3b7baf44.234fd8a8.ba14daf2.0c6a3ec9.a7e09e04"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 5,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/checks_loader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 5,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/checks_loader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 10,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/checks_loader.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 57,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 33,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 72,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 580,
                            "endLine": 580,
                            "startColumn": 57,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 579,
                            "endLine": 581,
                            "startColumn": 20,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 579,
                            "endLine": 581,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 582,
                            "endLine": 582,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 582,
                            "endLine": 582,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 583,
                            "endLine": 583,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 49,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 9,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31)",
              "[importlib.import_module](32)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "startColumn": 29,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b04678d4e450c99e029ee614ecb9e75d0aa336279316ba2135ea6ab8bab339f6",
            "1": "2d06e3d6.7c8db429.79e62dc9.139c59a8.234fd8a8.ba14daf2.081ac3f4.a7e09e04.92c56f2e.14acb82c.f37b2616.3b7baf44.234fd8a8.ba14daf2.0c6a3ec9.a7e09e04"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 5,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 8,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 135,
                            "endLine": 135,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 29,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 72,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 57,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 98,
                            "startColumn": 25,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 98,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 326,
                            "endLine": 326,
                            "startColumn": 49,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 368,
                            "endLine": 368,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 371,
                            "endLine": 371,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 24,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 372,
                            "endLine": 372,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 375,
                            "endLine": 375,
                            "startColumn": 9,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39)",
              "[importlib.import_module](40)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/__main__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "startColumn": 20,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8dbd71b55ad18038cb1c46165419db1149ed5c11272c04d6bf179f7e16805974",
            "1": "756029dd.4c22e90b.79e62dc9.e6ebf5a5.234fd8a8.5db29aed.081ac3f4.a7e09e04.adbad3a7.4c22e90b.f37b2616.c9b98ad1.234fd8a8.5db29aed.0c6a3ec9.db0f48c8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 9,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/cli/parser.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 19,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 5,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 107,
                            "endLine": 107,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 114,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 25,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 5,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/__main__.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 407,
                            "endLine": 407,
                            "startColumn": 5,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 421,
                            "endLine": 421,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 27,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 444,
                            "endLine": 444,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 446,
                            "endLine": 446,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 450,
                            "endLine": 450,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 523,
                            "endLine": 523,
                            "startColumn": 5,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 60,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 73,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 532,
                            "endLine": 532,
                            "startColumn": 9,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 531,
                            "endLine": 533,
                            "startColumn": 5,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 534,
                            "endLine": 534,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 35,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into importlib.import_module, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3)",
              "[importlib.import_module](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prowler/lib/check/check.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 22,
                  "endColumn": 45
                }
              }
            }
          ],
          "fingerprints": {
            "0": "251c1a55bd3ead629efbcc80424072abd23bbe99edefd511d87947a66e009b77",
            "1": "a6b41d6e.bd21faec.79e62dc9.139c59a8.18964aec.ce50543b.a2237efa.f46ed94e.a6b41d6e.bd21faec.b588a99c.139c59a8.18964aec.48e1de78.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 11,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 5,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 46,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "prowler/lib/check/check.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 45
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 505,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/awslambda/awslambda_function_no_secrets_in_variables/awslambda_function_no_secrets_in_variables_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 30,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7c79e06faa99d870687fc548d2292ddc8e994e76fcadb48457f78822673f9e0",
            "1": "16691f08.b5a115c3.762a13bb.fe697307.448c19d5.ba14daf2.081ac3f4.d266f4aa.16691f08.b5a115c3.60a6e24e.fe697307.4700aa72.ba14daf2.081ac3f4.d266f4aa"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/awslambda/awslambda_function_no_secrets_in_variables/awslambda_function_no_secrets_in_variables_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/NoHardcodedPasswords/test",
          "ruleIndex": 5,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in a dictionary key.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in a dictionary key.",
            "arguments": [
              "[hardcoded](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/providers/aws/services/ssm/ssm_document_secrets/ssm_document_secrets_test.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 26,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aab8c37014d46e9f97f42f35694f70157e0ab7f82177b42259e1aba6e7a99532",
            "1": "16691f08.6f678071.cd50688c.fe697307.41894b49.ba14daf2.081ac3f4.d266f4aa.32bae6d8.6f678071.cd50688c.a2280e79.caf8dcad.ba14daf2.081ac3f4.35a100a3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/providers/aws/services/ssm/ssm_document_secrets/ssm_document_secrets_test.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Python",
            "files": 969,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 1,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
